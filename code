#pragma warning(disable:4996)
#include <stdio.h>
#include <stdlib.h>
#include <limits.h>
#include <string.h>
#define MAX 15

//N : 놓아야하는 퀸의 수, result : 방법의 수(출력값)
//chess[n]=m : (m,n)에 놓인 퀸 = m행, n열에 놓인 퀸

int N, result = 0;
int chess[MAX];

void n_queen(int k);
int check(int m, int n);

int main() {
	scanf("%d",&N);
	n_queen(0);
	printf("%d", result);
}

//(m,n)에 퀸을 놓아도 되는지 확인하는 함수
int check(int m, int n) {
	/*
	체크해야 하는 것
		1.  같은 행에 놓인 퀸이 있는지
		2.  이미 놓인 퀸의 대각선 자리에 놓였는지
	*/
	for (int i = 0; i < n; i++) {
		if (chess[i] == m || (n - i) == (m - chess[i]) || (n - i) == (chess[i] - m)) {
			return 0;
		}
	}
	return 1;
}

void n_queen(int k) { //k : 이미 놓은 퀸의 개수
	if (k == N) {  //퀸을 n개 두었다면 방법+1
		result++;
		for (int i = 0; i < N; i++) {
			for (int k = 0; k < N; k++) {
				k == chess[i] ? printf("1") : printf("0");
			}
			printf("\n");
		}
		printf("\n");
	}else {
		for (int i = 0; i < N; i++) {
			chess[k] = i; // (i,k)에 퀸을 놓음
			if (check(i, k)) { // (i,k)에 놓을 수 있다면 다음 열로 이동
				n_queen(k + 1);
			}
		}
	}
}
